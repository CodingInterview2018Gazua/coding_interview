/*
주어진 유향그래프에서 특정한 두 노드간에 경로가 존재하는지
판별하는 알고리즘을 구현하라.

*/
#include <iostream>
#include <stack>
#include <queue>
#define MAX 1001

using namespace std;
int vertex, edge;
int graph[MAX][MAX];
bool visit[MAX];
queue<int> q;


bool bfs_isEdge(int start, int end){
	q.push(start);
	while(!q.empty()){
		start=q.front();
		q.pop();
		for(int i=1;i<=vertex;i++)
			if(graph[start][i] && !visit[i]){
				if(visit[end]==1){
					return true;
				} else{
					visit[i]=1;
					q.push(i);
				}
			}
	}
	return false;
}

int main(void){
	cin>>vertex>>edge;
	//graph edge connect
	for(int i=0;i<M;i++){
		int from, to;
		cin>>from>>to;
		graph[from][to]=1;
		//graph[to][from]=1;
	}
	cout<<bfs_isEdge(5,2)<<endl;
	return 0;
}
